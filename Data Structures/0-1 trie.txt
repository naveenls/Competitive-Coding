const int maxB=30;

struct node{
	bool bit;
	node* left=NULL;
	node* right=NULL;
};

node* root;

void insert_into(int x)
{
	int arr[maxB];
	
	for(int i=0;i<maxB;i++)
	{
		arr[i]=x%2;
		x/=2;	
	}
	
	node* n=root;
	
	for(int i=maxB-1;i>=0;i--)
	{
		if(arr[i])
		{
			if(n->right!=NULL)
			{
				n=n->right;
			}
			else
			{
				node* new_node =new node();
				new_node->bit=1;
				
				n->right=new_node;
				n=n->right;
			}
		}
		else
		{
			if(n->left!=NULL)
			{
				n=n->left;
			}
			else
			{
				node* new_node =new node();
				new_node->bit=0;
				
				n->left=new_node;
				n=n->left;
			}
		}
	}
}

void delete_from(int x)
{
	int arr[maxB];
	
	for(int i=0;i<maxB;i++)
	{
		arr[i]=x%2;
		x/=2;	
	}
	
	node* n=root;
	
	vector<node*> v;
	for(int i=maxB-1;i>=0;i--)
	{
		if(arr[i])
		{
			n=n->right;
		}
		else
		{
			n=n->left;
		}
		v.push_back(n);
	}
	reverse(v.begin(),v.end());
	
	for(int i=1;i<v.size();i++)
	{
		if(v[i]->left && v[i]->right)
		{
			//cout<<i<<' '<<v[i]->bit<<' '<<v[i-1]->bit<<endl;
			if(v[i-1]->bit)
			{
				v[i]->right=NULL;
			}
			else
			{
				v[i]->left=NULL;
			}
			return;
		}
	}
}